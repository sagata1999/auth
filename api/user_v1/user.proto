syntax = "proto3";

package user;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/sagata1999/auth/pkg/user_v1;user_v1";

// service UserV1 {
//     rpc Create(CreateRequest) returns (CreateResponse);
//     rpc Get(GetRequest) returns (GetResponse);
//     rpc Update(UpdateRequest) returns (google.protobuf.Empty);
//     rpc Delete(DeleteRequest) returns (google.protobuf.Empty);
// }

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      title: "User API"
      version: "1.0.0"
      contact: {
        name: "Azamat Valitov"
        email: "my@mail.com"
      };
    };
  
    host: "localhost:8080",
    schemes: HTTP,
    schemes: HTTPS,
    consumes: "application/json",
    produces: "application/json",
  };
  
  service UserV1 {
    // Создаёт нового пользователя
    rpc Create(CreateRequest) returns (CreateResponse){
      option (google.api.http) = {
        post: "/user/v1/create"
        body: "*"
      };
    }
  
    rpc Get(GetRequest) returns (GetResponse){
      option (google.api.http) = {
        get: "/user/v1"
      };
    }
  
    // rpc List(ListRequest) returns (ListResponse){
    //   option (google.api.http) = {
        // get: "/user/v1/list"
    //   };
    // }
  
    rpc Update(UpdateRequest) returns (google.protobuf.Empty){
      option (google.api.http) = {
        patch: "/user/v1"
        body: "*"
      };
    }
  
    rpc Delete(DeleteRequest) returns (google.protobuf.Empty){
      option (google.api.http) = {
        delete: "/user/v1"
      };
    }
  }

enum Role {
    // Обычный пользователь
    user = 0;
    // Пользователь администратор
    admin = 1;
}

message UserInfo {
    // Имя пользователя
    string name = 1 [(validate.rules).string = {min_len: 1, max_len: 50}];
    // Почта пользователя
    string email = 2;
    // Роль пользователя
    Role role = 3; 
}

message CreateUser {
    string name = 1;
    string email = 2;
    string password = 3;
    string password_confirm = 4;
    Role role = 5; 
}

message User {
    int64 id = 1;
    UserInfo info = 2;
    google.protobuf.Timestamp created_at = 4;
    google.protobuf.Timestamp updated_at = 5;
}

message CreateRequest {
    CreateUser user = 1;
}

message CreateResponse {
    int64 id = 1;
}

message GetRequest {
    int64 id = 1;
}

message GetResponse {
    User user = 1;
}

message UpdateRequest {
    int64 id = 1;
    google.protobuf.StringValue name = 2;
    google.protobuf.StringValue email = 3;
    Role role = 4;
}

message DeleteRequest {
    int64 id = 1;
}
